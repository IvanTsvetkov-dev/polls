"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%4^5(ytd@2x*e2dlgw4kltmy=k@jz5kcdu1qs#dw_u0yk0hqqw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# Параметр, который содержит имена всех проиложений Django, которые активированы в данном экземпляре.
INSTALLED_APPS = [
    'django.contrib.admin', # Администраторская часть сайта.
    'django.contrib.auth', # Система аунтефикации
    'django.contrib.contenttypes', # фреймворк типов данных?
    'django.contrib.sessions', # фреймворк сессий
    'django.contrib.messages', # фреймворк сообщений
    'django.contrib.staticfiles', # фреймврк для работы со статическими файлами.Он собирает статические файлы из каждого приложения в одно место, которое можно будет легко обслуживать.
    'polls' # Приложение опросы, которое мы подключаем к нашему экземпляру Django
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Параметр, указывает на корневой URLConf, который содержит маршруты всего приложения.
ROOT_URLCONF = 'mysite.urls'

"""
Параметр, указывает, как Django будет загружать и отображать шаблоны. По соглашению django ищет шаблоны в подкатологе templates в каждом из INSTALLED_APPS
Есть важный момент, связанный связанный с пространством имен шаблонов: Если мы создадим polls/templates и поместим туда index.html и в другом приложении
у нас будет присутсвовать в каталоге <пример_приложения>/templates файл с таким же именем, django не сможет их отличить друг от друга и возьмёт первый, который найдёт.
Для решения данной проблемы, рекомендуется создавать следующуя структуру(покажу на примере polls ) polls/templates/polls/index.html. В таком случае мы будем указывать при обращении
к шаблону явно /polls/index.html и проблем с однозначностью шаблонов не возникнет.
"""
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
